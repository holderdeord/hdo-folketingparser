#!/usr/bin/perl

use strict;
use warnings;
use encoding 'iso-8859-1', STDOUT => 'utf-8';

use XML::Simple;

my %votes;

sub collapse {
  my($vote_id, $field, $value) = @_;
  if (exists $votes{$vote_id}->{$field}) {
    my $old_value = $votes{$vote_id}->{$field};
    die "Inconsistent value for field $field: $old_value != $value on line $." if $old_value ne $value;
  } else {
    $votes{$vote_id}->{$field} = $value;
  }
}

# * Dato  (8)                        -Møtedato
# * KartNr                           -Kartnr (møtekartnr)
# * SakskartNr                       -Saksnr på kartet
# * VoteringsTidspunkt
# * VoteringsTema  maks (255)
# * AlternativVotering  maks (13)    -Tekst hvis alternativ votering
# * ResultatKode  maks (255)         -Resultatet hvor voteringsknappene ikke er benyttet
# * AntallFor                        -Totalt antall FOR, inneholder ikke verdi når resultatkoden="Enstemmig vedtatt"
# * AntallMot                        -Totalt antall MOT , inneholder ikke verdi når resultatkoden="Enstemmig vedtatt"
# * Navn  maks (82)
# * ReprNr
# * PersonId  maks (8)
# * Parti  maks (8)
# * Fylkeskode  maks (8)
# * ReprBifalt (1)                   - J/N for bifalt / ikke bifalt (FOR /MOT), Blank hvis ikke tilstede
# * VoteringsGruppeId                - Alternativvoteringsnr (Alternativ 1 eller 2)
while (<>) {
  chomp;
  my ($date, $kart_nr, $sakskart_nr, $vote_time, $subject, $option_description,
      $result_code, $count_for, $count_against, $name, $repr_nr, $person_id, 
      $party, $district_code, $vote, $option) 
    = map { s/^\s*//; s/\s*$//; $_; } split /;/;
  my $vote_id = join(";", $date, $sakskart_nr, $subject, $option_description);
  collapse($vote_id, "subject", $subject);
  collapse($vote_id, "count_for", $count_for);
  collapse($vote_id, "count_against", $count_against);
  collapse($vote_id, "date", $date);
  collapse($vote_id, "vote_time", $vote_time);
  collapse($vote_id, "issue_nr", $sakskart_nr);
  if ($result_code eq "Enstemmig vedtatt") {
    collapse($vote_id, "unanimous", 1);
  } elsif ($result_code) {
    die "Unknown result code $result_code";
  } else {
    push @{$votes{$vote_id}->{votes}}, 
      { 
       name => $name, repr_nr => $repr_nr, person_id => $person_id, 
       party => $party, district_code => $district_code, vote => $vote
      };
  }
}

for (sort { $votes{$a}->{vote_time} cmp $votes{$b}->{vote_time} } keys %votes) {
  printf "$_ %s\n",
    ($votes{$_}->{unanimous}) ? "unanimous" : scalar(@{$votes{$_}->{votes}});
}
